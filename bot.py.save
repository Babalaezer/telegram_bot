import logging
import re
from telegram import Update
from telegram.ext import Application, MessageHandler, filters, ContextTypes, CommandHandler

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

# –°–ª–æ–≤–∞—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ç–µ–≥–æ–≤ –∏ –∫–∞–Ω–∞–ª–æ–≤
TAG_TO_CHANNEL = {
    '@–°–≠–°': '-1002614380862',  # ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Ç–µ–≥–∞ @–°–≠–°
    '@–Æ–≠–°': None,                    # ID –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–∑–∂–µ
    '@–ó–≠–°': '-1002551847655',
    '@–ú–í–°': '-1002500307901',
    '@–ù–ú': '-1002346716497',
    '@–ú–ö–°': '-1002317009292',
    '@–í–≠–°': '-1002675966349',
    # –î–æ–±–∞–≤—å –¥—Ä—É–≥–∏–µ —Ç–µ–≥–∏ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
}

# ID –∏—Å—Ö–æ–¥–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞, –æ—Ç–∫—É–¥–∞ –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º
SOURCE_CHANNEL_ID = '-4795227385'

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
    
    print(f"–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞: {update.effective_chat.id}")  # –û—Ç–ª–∞–¥–∫–∞
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
    if update.effective_chat.id != int(SOURCE_CHANNEL_ID):
        print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑ –Ω—É–∂–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞. –û–∂–∏–¥–∞–µ—Ç—Å—è: {SOURCE_CHANNEL_ID}, –ø–æ–ª—É—á–µ–Ω–æ: {update.effective_chat.id}")
        return
    
    message_text = update.message.text or update.message.caption or ""
    print(f"–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: {message_text}")  # –û—Ç–ª–∞–¥–∫–∞
    
    # –ò—â–µ–º —Ç–µ–≥–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
    found_tags = []
    for tag in TAG_TO_CHANNEL.keys():
        if tag.lower() in message_text.lower():
            found_tags.append(tag)
    
    print(f"–ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏: {found_tags}")  # –û—Ç–ª–∞–¥–∫–∞
    
    # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–∞–Ω–∞–ª—ã
    for tag in found_tags:
        target_channel = TAG_TO_CHANNEL[tag]
        try:
            print(f"–ü—ã—Ç–∞—é—Å—å –ø–µ—Ä–µ—Å–ª–∞—Ç—å –≤ –∫–∞–Ω–∞–ª: {target_channel}")  # –û—Ç–ª–∞–¥–∫–∞
            
            # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await context.bot.forward_message(
                chat_id=target_channel,
                from_chat_id=update.effective_chat.id,
                message_id=update.message.message_id
            )
            
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª {target_channel} –ø–æ —Ç–µ–≥—É {tag}")
            logging.info(f"–°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª {target_channel} –ø–æ —Ç–µ–≥—É {tag}")
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –≤ {target_channel}: {e}")
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ –≤ {target_channel}: {e}")

async def get_chat_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–ª—É—á–∞–µ—Ç ID —á–∞—Ç–∞ - –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    chat_id = update.effective_chat.id
    await update.message.reply_text(f"Chat ID: {chat_id}")
    print(f"Chat ID –∑–∞–ø—Ä–æ—à–µ–Ω: {chat_id}")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ –±–æ—Ç–∞ –æ—Ç @BotFather
    BOT_TOKEN = "7340132549:AAHLaDnltnSNftHe_WzPwRqKSR59YYa_r6M"  # –¢–≤–æ–π —Ç–æ–∫–µ–Ω
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(
        filters.TEXT | filters.CAPTION, 
        handle_message
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞
    application.add_handler(CommandHandler("chatid", get_chat_id))
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    print(f"üì• –°–ª—É—à–∞—é –∫–∞–Ω–∞–ª: {SOURCE_CHANNEL_ID}")
    print(f"üì§ –ü–µ—Ä–µ—Å—ã–ª–∞—é –≤ –∫–∞–Ω–∞–ª—ã: {list(TAG_TO_CHANNEL.values())}")
    print(f"üè∑Ô∏è –û—Ç—Å–ª–µ–∂–∏–≤–∞—é —Ç–µ–≥–∏: {list(TAG_TO_CHANNEL.keys())}")
    application.run_polling()

if __name__ == '__main__':
    main()